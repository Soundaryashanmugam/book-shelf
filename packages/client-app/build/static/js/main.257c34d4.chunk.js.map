{"version":3,"sources":["navigation/navigator.ts","assets/styles/config.ts","components/BoxView/styles.tsx","assets/styles/colors.ts","components/BoxView/index.tsx","navigation/routes.ts","utilities/i18n/index.ts","utilities/i18n/languages/hindi.ts","utilities/i18n/languages/english.ts","utilities/i18n/languages/marathi.ts","utilities/i18n/languages/telugu.ts","components/TextView/styles.ts","assets/styles/fonts.ts","components/TextView/index.tsx","features/Welcome/component.tsx","features/Welcome/index.tsx","components/ButtonTagView/index.tsx","components/IconView/index.tsx","components/ModalView/index.tsx","components/InputTextView/styles.ts","components/InputTextView/index.tsx","components/PaginationView/index.tsx","components/ItemListView/views/EmptyView.tsx","components/ItemListView/index.tsx","features/Books/views/BookItem.tsx","utilities/utils/index.ts","components/ButtonItemView/index.tsx","features/Books/Details/component.tsx","features/Books/component.tsx","features/Books/index.tsx","features/Books/List/action.ts","navigation/index.tsx","features/Books/List/reducer.ts","redux/reducers/index.ts","utilities/network/config.ts","utilities/network/index.ts","components/ToastView/index.tsx","features/Books/List/saga.ts","redux/saga/index.ts","redux/store/index.ts","index.js"],"names":["config","ICON_CONFIG","xs","sm","md","lg","xlg","xxlg","xxxlg","xxxxlg","xxxxxlg","styles","flex","one","two","three","four","five","six","seven","eight","nine","row","flexDirection","flexFlow","column","m6","margin","m12","padding","yxs","paddingTop","paddingBottom","xSMyXS","paddingLeft","paddingRight","xsm","xxs","xmd","ysm","ymd","ylg","pb60","xl6","marginLeft","lrbsm","marginRight","marginBottom","marginTop","xss","xsTop","smTop","mdTop","mbsm","mbmd","alignContent","center","flexEnd","flexStart","spaceAround","spaceBetween","stretch","alignItems","justify","justifyContent","spaceEvenly","alignSelf","auto","baseline","border","borderWidth","borderColor","borderRightWidth","borderRightColor","topXs","borderTopWidth","borderTopColor","bottomXs","borderBottomWidth","borderBottomColor","bottom","top","right","bsm","smInput","background","accent","backgroundColor","darkAccent","primary","white","transparent","grey","lightGrey","danger","success","warning","info","lightBlue","darkGreen","lightVoilet","position","left","bottonRight","zIndex","elevation","shadowOffset","width","height","shadowOpacity","shadowRadius","Platform","OS","roundLg","round","borderRadius","curve","radius","BoxView","props","scroll","keyboardShouldPersistTaps","children","direction","ScrollView","contentContainerStyle","View","style","defaultProps","align","undefined","scrollCover","NavigateToBooksView","name","params","navigator","current","dispatch","CommonActions","navigate","I18n","fallbacks","missingBehaviour","defaultLocale","locale","translations","hindi","IO_SEARCH_BOOK","IO_NO_RECORDS","english","marathi","telugu","initLanguage","a","translate","bind","light","fontFamily","regular","medium","fontWeight","semiBold","bold","none","noneCancelled","textDecorationLine","noneBold","placeholer","color","secondary","fontSize","textAlign","TextView","label","weight","size","lines","Text","numberOfLines","Welcome","state","startValue","Animated","Value","endValue","_handleValidateSession","setTimeout","loop","spring","this","toValue","friction","useNativeDriver","start","StatusBar","barStyle","transform","scale","Book","PureComponent","WelcomeScreen","connect","Component","ButtonTagView","onPress","TouchableNativeFeedback","TouchableOpacity","activeOpacity","getIconSize","IconView","type","IconElement","ModalView","visible","title","close","hide","backdropClick","measure","refresh","console","log","customStyles","animation","onClose","Cancel","inputText","inputTextPlaceholder","default","_renderTextInput","value","placeholder","maxLength","suggestions","editable","focus","inputType","multiline","onChange","onKeyPress","TextInput","selection","end","keyboardType","returnKeyType","placeholderTextColor","autoCorrect","underlineColorAndroid","onChangeText","text","InputTextView","leftIcon","leftText","rightIcon","rightText","iconType","leftTextView","rightTextView","leftIconView","rightIconView","PaginationView","totalRecords","limit","click","page","pagination","pageNumbers","i","Math","ceil","push","renderPageNumbers","map","number","isActive","key","ListEmptyView","data","loading","records","onRefresh","itemList","hasRecords","length","GetMessage","ItemListView","component","click_1","click_2","click_3","click_4","click_5","cols","onLoadMore","onPageChange","ContentComponent","OnPageChangeEvent","FlatList","ListEmptyComponent","numColumns","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","keyExtractor","item","index","toString","renderItem","refreshing","onEndReached","onEndReachedThreshold","RenderPagination","header","retryClick","Dimensions","get","BookItem","description","sysId","year","src","GetRandomString","result","characters","charactersLength","charAt","floor","random","ButtonItemView","icon","iconColor","buttonView","getButtonView","BookDetailsView","updateWindowDimensions","setState","screenWidth","window","innerWidth","addEventListener","removeEventListener","showDirectionOnSmallDevice","showDirectionOnExtraSmallDevice","ShoppingCart","FlashOn","Star","LocalOffer","className","href","EventAvailable","author","BookView","_dispatchGetBookList","search","onGetBookListRequest","_handleSetInput","debounceSearchInputChange","debounce","_handlePageChange","scrollTo","behavior","_renderModal","visibleBookDetailsModal","selectedBook","_handleOpenBookDetails","books","isFetching","ActivityIndicator","animating","bookListResponse","payload","isEqual","response","tasks","BooksScreen","bookList","items","getBooksAction","Stack","createStackNavigator","RootNavigation","nav","ref","React","NavigationContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Navigator","Screen","options","headerShown","intialState","GetBookListReducer","action","results","AppReducer","combineReducers","BASE_URL","GetRequest","GetHeadersWithOutAuthentication","url","GetHeadersWithAuthentication","axios","status","headers","Accept","HTTP_CONTENT_LANGUAGE","ToastView","message","toast","getBookList","watchGetBookListRequest","actions","URL","GET","meta","Object","keys","put","Toast","takeLatest","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","App","AppStore","AppRegistry","registerComponent","appName","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.257c34d4.chunk.js","sourcesContent":["import {CommonActions, StackActions} from '@react-navigation/native';\n\nlet config: any = {};\n\nexport const setNavigator = (nav: any) => {\n  if (nav) {\n    config.navigator = nav;\n  }\n};\n\nexport const reset = (name: string, params?: any) => {\n  config.navigator.current.dispatch({\n    ...CommonActions.reset({\n      index: 0,\n      routes: [{name, params}],\n    }),\n  });\n};\n\nexport const navigate = (name: string, params?: any) => {\n  config.navigator.current.dispatch(CommonActions.navigate({name, params}));\n};\n\nexport const goBack = () => {\n  config.navigator.current.dispatch(StackActions.pop());\n};\n\nexport const getParam = (props: any, key: string) => {\n  if (!props.route) {\n    return null;\n  }\n  return props.route.params[key];\n};\n","// Style Config\n\nimport { IIconConfig } from \"./types\";\n\n// Text Style\nexport const text_xs = 11;\nexport const text_sm = 12;\nexport const text_md = 14;\nexport const text_lg = 16;\nexport const text_xlg = 18;\nexport const text_xxlg = 22;\nexport const text_xxxlg = 28;\n\nexport const TEXT_CONFIG: IIconConfig = {\n  xs: 12,\n  sm: 14,\n  md: 18,\n  lg: 24,\n  xlg: 26,\n  xxlg: 32,\n  xxxlg: 38,\n};\n\n// Icon style\nexport const ICON_CONFIG: IIconConfig = {\n  xs: 12,\n  sm: 14,\n  md: 18,\n  lg: 24,\n  xlg: 26,\n  xxlg: 32,\n  xxxlg: 51,\n  xxxxlg: 56,\n  xxxxxlg: 72,\n};\n","import { Platform } from 'react-native';\nimport {\n  colorDisabled,\n  colorWhite,\n  colorDanger,\n  colorSuccess,\n  colorTransparent,\n  colorLightGrey,\n  colorInfo,\n  colorAccent,\n  colorBackground,\n  colorAccentDark,\n  colorLightBackground,\n  colorWarning,\n  colorWhatsApp,\n  colorBlack,\n  colorTextPrimary,\n  colorVoiletLight\n} from '@assets/styles';\n\nexport const styles: any = {\n  // Flex\n\n  flex: {\n    one: {\n      flex: 1\n    },\n    two: {\n      flex: 2\n    },\n    three: {\n      flex: 3\n    },\n    four: {\n      flex: 4\n    },\n    five: {\n      flex: 5\n    },\n    six: {\n      flex: 6\n    },\n    seven: {\n      flex: 7\n    },\n    eight: {\n      flex: 8\n    },\n    nine: {\n      flex: 9\n    }\n  },\n\n  // Content Direction\n  row: {\n    flexDirection: 'row',\n    flexFlow: 'wrap'\n  },\n  column: {\n    flexDirection: 'column'\n  },\n\n  // margin\n  m6: {\n    margin: 6\n  },\n  m12: {\n    margin: 12\n  },\n\n  padding: {\n    xs: {\n      padding: 2\n    },\n    yxs: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n    xSMyXS: {\n      paddingLeft: 6,\n      paddingRight: 6,\n      paddingTop: 12,\n      paddingBottom: 12\n    },\n    sm: {\n      padding: 6\n    },\n    xsm: {\n      paddingLeft: 6,\n      paddingRight: 6\n    },\n    xxs: {\n      paddingLeft: 4,\n      paddingRight: 4\n    },\n    md: {\n      padding: 12\n    },\n    lg: {\n      padding: 32\n    },\n    xmd: {\n      paddingLeft: 12,\n      paddingRight: 12\n    },\n    xlg: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n    ysm: {\n      paddingTop: 6,\n      paddingBottom: 6\n    },\n    ymd: {\n      paddingTop: 12,\n      paddingBottom: 12\n    },\n    ylg: {\n      paddingTop: 16,\n      paddingBottom: 16\n    },\n    pb60: {\n      paddingBottom: 60\n    }\n  },\n  margin: {\n    xl6: {\n      marginLeft: 6\n    },\n    lrbsm: {\n      marginLeft: 6,\n      marginRight: 6,\n      marginBottom: 6\n    },\n    yxs: {\n      marginTop: 4,\n      marginBottom: 4\n    },\n    xs: {\n      margin: 2\n    },\n    xss: {\n      margin: 2\n    },\n    xsTop: {\n      marginTop: 2\n    },\n    sm: {\n      margin: 6\n    },\n    xsm: {\n      marginLeft: 6,\n      marginRight: 6\n    },\n    xxs: {\n      marginLeft: 4,\n      marginRight: 4\n    },\n    smTop: {\n      marginTop: 6\n    },\n    mdTop: {\n      marginTop: 12\n    },\n    ysm: {\n      marginTop: 2,\n      marginBottom: 2\n    },\n    ymd: {\n      marginTop: 12,\n      marginBottom: 12\n    },\n    xmd: {\n      marginLeft: 12,\n      marginRight: 12\n    },\n    xlg: {\n      marginLeft: 62,\n      marginRight: 62\n    },\n    lg: {\n      margin: 16\n    },\n    md: {\n      margin: 12\n    },\n    ylg: {\n      marginTop: 16,\n      marginBottom: 16\n    },\n    mbsm: {\n      marginBottom: 4\n    },\n    mbmd: {\n      marginBottom: 12\n    }\n  },\n\n  // Align items\n\n  alignContent: {\n    center: {\n      alignContent: 'center'\n    },\n    flexEnd: {\n      alignContent: 'flex-end'\n    },\n    flexStart: {\n      alignContent: 'flex-start'\n    },\n    spaceAround: {\n      alignContent: 'space-around'\n    },\n    spaceBetween: {\n      alignContent: 'space-between'\n    },\n    stretch: {\n      alignContent: 'stretch'\n    }\n  },\n\n  alignItems: {\n    center: {\n      alignItems: 'center'\n    },\n    flexEnd: {\n      alignItems: 'flex-end'\n    },\n    flexStart: {\n      alignItems: 'flex-start'\n    },\n    spaceAround: {\n      alignItems: 'space-around'\n    },\n    spaceBetween: {\n      alignItems: 'space-between'\n    },\n    stretch: {\n      alignItems: 'stretch'\n    }\n  },\n\n  justify: {\n    center: {\n      justifyContent: 'center'\n    },\n    flexEnd: {\n      justifyContent: 'flex-end'\n    },\n    flexStart: {\n      justifyContent: 'flex-start'\n    },\n    spaceAround: {\n      justifyContent: 'space-around'\n    },\n    spaceBetween: {\n      justifyContent: 'space-between'\n    },\n    spaceEvenly: {\n      justifyContent: 'space-evenly'\n    }\n  },\n\n  // Align self\n\n  alignSelf: {\n    center: {\n      alignSelf: 'center'\n    },\n    flexEnd: {\n      alignSelf: 'flex-end'\n    },\n    flexStart: {\n      alignSelf: 'flex-start'\n    },\n    auto: {\n      alignSelf: 'auto'\n    },\n    baseline: {\n      alignSelf: 'baseline'\n    },\n    stretch: {\n      alignSelf: 'stretch'\n    }\n  },\n\n  border: {\n    xs: {\n      borderWidth: 0.6,\n      borderColor: colorDisabled\n    },\n    xxs: {\n      borderRightWidth: 0.6,\n      borderRightColor: colorDisabled\n    },\n    sm: {\n      borderWidth: 1,\n      borderColor: colorDisabled\n    },\n    md: {\n      borderWidth: 1.3,\n      borderColor: colorDisabled\n    },\n    topXs: {\n      borderTopWidth: 1,\n      borderTopColor: colorDisabled\n    },\n    bottomXs: {\n      borderBottomWidth: 0.6,\n      borderBottomColor: colorDisabled\n    },\n    bottom: {\n      borderBottomWidth: 0.5,\n      borderBottomColor: colorDisabled\n    },\n    top: {\n      borderTopWidth: 1,\n      borderTopColor: colorDisabled\n    },\n    right: {\n      borderRightWidth: 1,\n      borderRightColor: colorDisabled\n    },\n    bsm: {\n      borderWidth: 1,\n      borderColor: colorBlack\n    },\n    smInput: {\n      borderWidth: 0.7,\n      borderColor: colorTextPrimary\n    }\n  },\n\n  // Background\n  background: {\n    accent: {\n      backgroundColor: colorAccent\n    },\n    darkAccent: {\n      backgroundColor: colorAccentDark\n    },\n    primary: {\n      backgroundColor: colorBackground\n    },\n    white: {\n      backgroundColor: colorWhite\n    },\n    transparent: {\n      backgroundColor: colorTransparent\n    },\n    grey: {\n      backgroundColor: colorDisabled\n    },\n    lightGrey: {\n      backgroundColor: colorLightGrey\n    },\n    danger: {\n      backgroundColor: colorDanger\n    },\n    success: {\n      backgroundColor: colorSuccess\n    },\n    warning: {\n      backgroundColor: colorWarning\n    },\n    info: {\n      backgroundColor: colorInfo\n    },\n    lightBlue: {\n      backgroundColor: colorLightBackground\n    },\n    darkGreen: {\n      backgroundColor: colorWhatsApp\n    },\n    lightVoilet: {\n      backgroundColor: colorVoiletLight\n    }\n  },\n\n  // Position\n  position: {\n    bottom: {\n      flex: 1,\n      padding: 0,\n      margin: 0,\n      left: 0,\n      right: 0,\n      position: 'absolute',\n      bottom: 0\n    },\n    top: {\n      flex: 1,\n      padding: 0,\n      margin: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      position: 'absolute'\n    },\n    bottonRight: {\n      position: 'absolute',\n      alignItems: 'center',\n      justifyContent: 'center',\n      right: 16,\n      bottom: 12,\n      zIndex: 1\n    }\n  },\n  elevation: {\n    xs: {\n      shadowOffset: {\n        width: 0,\n        height: 0\n      },\n\n      shadowOpacity: 1,\n      shadowRadius: 1,\n      elevation: 1\n    },\n    sm: {\n      shadowOffset: {\n        width: 0,\n        height: 0\n      },\n\n      shadowOpacity: Platform.OS === 'android' ? 0.5 : 0.2,\n      shadowRadius: Platform.OS === 'android' ? 2 : 1,\n      elevation: Platform.OS === 'android' ? 2 : 1\n    },\n    md: {\n      shadowOffset: {\n        width: 0,\n        height: 0\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1,\n      elevation: 20\n    },\n    roundLg: {\n      elevation: 8\n    }\n  },\n  round: {\n    xs: {\n      borderRadius: 6\n    },\n    sm: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 200,\n      width: 38,\n      height: 38\n    },\n    md: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 200,\n      width: 42,\n      height: 42\n    },\n    lg: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 200,\n      width: 52,\n      height: 52\n    },\n    xlg: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 200,\n      width: 62,\n      height: 62\n    },\n    xxlg: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 200,\n      width: 82,\n      height: 82\n    },\n    xxxlg: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 200,\n      width: 112,\n      height: 112\n    },\n    xxxxlg: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 200,\n      width: 360,\n      height: 360\n    }\n  },\n  curve: {\n    sm: {\n      borderRadius: 12\n    }\n  },\n  height: {\n    '400': {\n      height: 300\n    }\n  },\n  radius: {\n    xs: {\n      borderRadius: 40\n    },\n    sm: {\n      borderRadius: 6\n    },\n    md: {\n      borderRadius: 12\n    },\n    lg: {\n      borderRadius: 20\n    },\n    xlg: {\n      borderRadius: 100\n    }\n  }\n};\n","// Light Style\nexport const COLOR_PRIMARY = '#12193D';\nexport const COLOR_PRIMARY_DARK = '#7f0000';\nexport const COLOR_ACCENT = '#5F7DF6';\nexport const COLOR_ACCENT_DARK = '#4761c7';\nexport const COLOR_TEXT_PRIMARY = '#34495e';\nexport const COLOR_PLACEHOLDER = '#666';\nexport const COLOR_TEXT_SECONDARY = '#8babcc';\nexport const COLOR_DISABLED = '#e9e9e9';\nexport const COLOR_WHITE_LIGHT = '#ffffff40';\nexport const COLOR_BACKGROUND = '#F6F9FE';\nexport const COLOR_LIGHT_BACKGROUND = '#f3f3f3';\nexport const COLOR_WHITE = '#fff';\nexport const COLOR_BLACK = '#000';\nexport const COLOR_TRANSPARENT = 'transparent';\nexport const COLOR_DIVIDER = '#ccc';\nexport const COLOR_DIVIDER_DARK = '#ccc';\nexport const COLOR_HEADER = '#eee';\nexport const COLOR_LIGHT_GREY = '#f1f1f1';\nexport const COLOR_WARNING = '#f39c12';\nexport const COLOR_DANGER = '#e15f41';\nexport const COLOR_SUCCESS = '#16a085';\nexport const COLOR_INFO = '#45aaf2';\nexport const COLOR_WHATSAPP = '#4AC959';\nexport const COLOR_VOILET_LIGHT = '#e15f4133';\n\n// Dark Style\n","/**\n * @format\n */\n\nimport React from 'react';\nimport { View, ScrollView } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { styles } from './styles';\n\nconst BoxView: React.FC<BoxProps> = (props) => {\n  const {\n    scroll,\n    keyboardShouldPersistTaps,\n    children,\n    flex = '',\n    background = '',\n    padding = '',\n    direction = ''\n  } = props;\n\n  if (!!scroll) {\n    return (\n      <ScrollView\n        contentContainerStyle={[\n          styles.padding.pb60,\n          styles[direction],\n          styles['flex'][flex],\n          styles['background'][background],\n          styles['padding'][padding]\n        ]}\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n      >\n        {children}\n      </ScrollView>\n    );\n  }\n\n  const {\n    round = '',\n    radius = '',\n    position = '',\n    elevation = '',\n    alignItems = '',\n    alignSelf = '',\n    border = '',\n    justify = '',\n    margin = '',\n    height = '',\n    width = ''\n  } = props;\n  return (\n    <View\n      style={[\n        styles['flex'][flex],\n        styles['round'][round],\n        styles['radius'][radius],\n        styles['elevation'][elevation],\n        styles['position'][position],\n        styles[direction],\n        styles['background'][background],\n        styles['alignItems'][alignItems],\n        styles['alignSelf'][alignSelf],\n        styles['border'][border],\n        styles['justify'][justify],\n        styles['margin'][margin],\n        styles['padding'][padding],\n        styles['height'][height]\n      ]}\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface BoxProps {\n  flex?: string;\n  round?: string;\n  radius?: string;\n  position?: string;\n  elevation?: string;\n  background?: string;\n  direction?: string;\n  align?: string;\n  alignItems?: string;\n  alignContent?: string;\n  alignSelf?: string;\n  border?: string;\n  justify?: string;\n  margin?: string;\n  padding?: string;\n  width?: string;\n  height?: string;\n  scroll?: boolean;\n  scrollCover?: boolean;\n  keyboardShouldPersistTaps?: boolean | 'always' | 'never' | 'handled';\n}\n\nBoxView.defaultProps = {\n  flex: '',\n  round: '',\n  radius: '',\n  position: '',\n  elevation: '',\n  background: 'transparent',\n  direction: '',\n  margin: '',\n  padding: '',\n  align: '',\n  alignContent: '',\n  alignItems: '',\n  alignSelf: '',\n  justify: '',\n  border: '',\n  width: undefined,\n  height: undefined,\n  scroll: undefined,\n  scrollCover: false,\n  keyboardShouldPersistTaps: undefined\n};\n\nBoxView.propTypes = {\n  flex: PropTypes.string,\n  round: PropTypes.string,\n  radius: PropTypes.string,\n  position: PropTypes.string,\n  elevation: PropTypes.string,\n  background: PropTypes.string,\n  direction: PropTypes.string,\n  margin: PropTypes.string,\n  padding: PropTypes.string,\n  align: PropTypes.string,\n  alignContent: PropTypes.string,\n  alignSelf: PropTypes.string,\n  justify: PropTypes.string,\n  border: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  scroll: PropTypes.bool,\n  scrollCover: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['always', 'never', 'handled'])\n};\n\nexport default BoxView;\n","import { navigate, reset, goBack } from './navigator';\n\nexport const NavigateGoBack = () => {\n  goBack();\n};\n\nexport const NavigateToWelcomeScreen = () => {\n  reset('Welcome');\n};\n\nexport const NavigateToBooksView = () => {\n  navigate('BooksScreen');\n};\n\nexport { setNavigator } from './navigator';\n","import I18n from 'react-native-i18n';\nimport english from './languages/english';\nimport hindi from './languages/hindi';\nimport marathi from './languages/marathi';\nimport telugu from './languages/telugu';\n\nI18n.fallbacks = true; // If an English translation is not available in en.js, it will look inside hi.js\nI18n.missingBehaviour = 'guess'; // It will convert HOME_noteTitle to \"HOME note title\" if the value of HOME_noteTitle doesn't exist in any of the translation files.\nI18n.defaultLocale = 'english'; // If the current locale in device is not en or hi\nI18n.locale = 'english'; // If we do not want the framework to use the phone's locale by default\n\nI18n.translations = {\n  hindi,\n  english,\n  marathi,\n  telugu\n};\n\nexport const initLanguage = async () => {\n  I18n.locale = I18n.defaultLocale;\n};\n\nexport const setLocale = async (locale: string) => {\n  I18n.locale = locale;\n  return;\n};\n\nexport const getCurrentLocale = () => I18n.locale; // It will be used to define intial language state in reducer.\n/* translateHeaderText:\n screenProps => coming from react-navigation (defined in app.container.js)\n langKey => will be passed from the routes file depending on the screen.(We will explain the usage later int the coming topics)\n*/\nexport const translateHeaderText = (langKey: any) => (screenProps: any) => {\n  const title = I18n.translate(langKey, screenProps.language);\n  return { title };\n};\n\nexport default I18n.translate.bind(I18n);\n","export default {\n  IO_SEARCH_BOOK: 'Search your book here',\n  IO_NO_RECORDS: 'No records found'\n};\n","export default {\n  IO_SEARCH_BOOK: 'Search your book here',\n  IO_NO_RECORDS: 'No records found'\n};\n","export default {\n  IO_SEARCH_BOOK: 'Search your book here',\n  IO_NO_RECORDS: 'No records found'\n};\n","export default {\n  IO_SEARCH_BOOK: 'Search your book here',\n  IO_NO_RECORDS: 'No records found'\n};\n","import {\n  colorTextPrimary,\n  colorTextSecondary,\n  colorAccentDark,\n  fontLight,\n  fontRegular,\n  fontMedium,\n  fontSemiBold,\n  fontBold,\n  colorWhite,\n  colorDanger,\n  colorSuccess,\n  colorPlaceholer,\n  colorWarning,\n} from '@assets/styles';\n\nexport const styles: any = {\n  // Weight Styling\n  light: {\n    fontFamily: fontLight,\n  },\n  regular: {\n    fontFamily: fontRegular,\n  },\n  medium: {\n    fontFamily: fontMedium,\n    fontWeight: 400,\n  },\n  semiBold: {\n    fontFamily: fontSemiBold,\n    fontWeight: 500,\n  },\n  bold: {\n    fontFamily: fontBold,\n    fontWeight: 600,\n  },\n  none: {},\n  noneCancelled: {\n    textDecorationLine: 'line-through',\n  },\n  noneBold: {\n    fontWeight: 'bold',\n  },\n  // Text Color\n  placeholer: {\n    color: colorPlaceholer,\n  },\n  primary: {\n    color: colorTextPrimary,\n  },\n  secondary: {\n    color: colorTextSecondary,\n  },\n  accent: {\n    color: colorAccentDark,\n  },\n  white: {\n    color: colorWhite,\n  },\n  danger: {\n    color: colorDanger,\n  },\n  success: {\n    color: colorSuccess,\n  },\n  warning: {\n    color: colorWarning,\n  },\n\n  // Text sizes\n  xxs: {\n    fontSize: 11,\n  },\n  xs: {\n    fontSize: 12,\n  },\n  sm: {\n    fontSize: 13,\n  },\n  md: {\n    fontSize: 14,\n  },\n  lg: {\n    fontSize: 17,\n  },\n  xlg: {\n    fontSize: 25,\n  },\n  xxlg: {\n    fontSize: 30,\n  },\n  xxxlg: {\n    fontSize: 48,\n  },\n\n  // Text Alignment\n  center: {\n    textAlign: 'center',\n  },\n  left: {\n    textAlign: 'left',\n  },\n  right: {\n    textAlign: 'right',\n  },\n};\n","export const FONT_LIGHT = 'BalooBhai-Regular';\nexport const FONT_REGULAR = 'BalooBhai-Medium';\nexport const FONT_MEDIUM = 'BalooBhai-Medium';\nexport const FONT_SEMIBOLD = 'BalooBhai-Bold';\nexport const FONT_BOLD = 'BalooBhai-Bold';\n","/**\n * @format\n */\n\nimport React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { styles } from './styles';\n\nconst TextView: React.FC<TextViewProps> = (props) => {\n  const { label = '', weight = '', color = '', size = '', align = '', lines = 1 } = props;\n  return (\n    <Text numberOfLines={lines} style={[styles[color], styles[weight], styles[size], styles[align]]}>\n      {label}\n    </Text>\n  );\n};\n\ninterface TextViewProps {\n  label: string;\n  weight?: string;\n  color?: string;\n  size?: string;\n  align?: string;\n  lines?: number;\n}\n\nTextView.defaultProps = {\n  label: '',\n  color: 'primary',\n  weight: 'medium',\n  size: 'sm',\n  align: 'left',\n  lines: 1,\n};\n\nTextView.propTypes = {\n  label: PropTypes.string.isRequired,\n  color: PropTypes.oneOf(['primary', 'success', 'placeholder', 'secondary', 'white', 'accent', 'danger', 'warning']),\n  weight: PropTypes.oneOf([\n    'light',\n    'regular',\n    'medium',\n    'semiBold',\n    'bold',\n    'none',\n    'noneBold',\n    'noneBoldXXLarge',\n    'noneCancelled',\n  ]),\n  size: PropTypes.oneOf(['xxs', 'xs', 'sm', 'md', 'lg', 'xlg', 'xxlg', 'xxxlg']),\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n  lines: PropTypes.number,\n};\n\nexport default TextView;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport BoxView from '@components/BoxView';\nimport { NavigateToBooksView } from '@navigation/routes';\nimport { StatusBar, Animated } from 'react-native';\nimport { colorAccent, colorWhite } from '@assets/styles';\nimport { IProps } from './types';\nimport { initLanguage } from '@i18n';\nimport IconView from '@components/IconView';\nimport TextView from '@components/TextView';\nimport { Book } from '@material-ui/icons';\n\nexport default class Welcome extends PureComponent<any, any> {\n  state = {\n    startValue: new Animated.Value(1),\n    endValue: 1.2\n  };\n\n  static propTypes = {\n    onGetAccountDetails: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    Animated.loop(\n      Animated.spring(this.state.startValue, {\n        toValue: this.state.endValue,\n        friction: 0,\n        useNativeDriver: true\n      })\n    ).start();\n    this._handleValidateSession();\n  }\n\n  _handleValidateSession = async () => {\n    await initLanguage();\n    setTimeout(() => NavigateToBooksView(), 1500);\n  };\n\n  render() {\n    return (\n      <BoxView background=\"danger\" flex=\"one\" padding=\"md\" alignItems=\"center\" justify=\"center\">\n        <StatusBar backgroundColor={colorAccent} barStyle=\"light-content\" />\n        <Animated.View\n          style={[\n            {\n              transform: [\n                {\n                  scale: this.state.startValue\n                }\n              ]\n            }\n          ]}\n        >\n          <Book style={{ color: colorWhite, fontSize: 100 }} />\n        </Animated.View>\n        <BoxView margin=\"ymd\" alignItems=\"center\">\n          <TextView label=\"Book Shelf\" color=\"white\" size=\"xxxlg\" />\n          <TextView label=\"Manage your book shelf!\" color=\"white\" size=\"lg\" />\n        </BoxView>\n        <TextView label=\"#A React &amp; NodeJS Monorepo\" color=\"white\" size=\"xs\" />\n      </BoxView>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport Component from './component';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {};\n};\n\nconst WelcomeScreen = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport default WelcomeScreen;\n","/**\n * @format\n */\n\nimport React from 'react';\nimport {TouchableOpacity, Platform, TouchableNativeFeedback} from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst ButtonTagView: React.FC<ButtonItemProps> = (props) => {\n  const {onPress, children} = props;\n\n  if (Platform.OS === 'android') {\n    return <TouchableNativeFeedback onPress={onPress}>{children}</TouchableNativeFeedback>;\n  }\n  return (\n    <TouchableOpacity activeOpacity={0.7} onPress={onPress}>\n      {children}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonItemProps {\n  onPress(): any;\n}\n\nButtonTagView.defaultProps = {\n  onPress: undefined,\n};\n\nButtonTagView.propTypes = {\n  onPress: PropTypes.func.isRequired,\n};\n\nexport default ButtonTagView;\n","/**\n * @format\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { colorTextPrimary } from '@assets/styles/index';\nimport { ICON_CONFIG } from '@assets/styles/config';\nimport { Platform } from 'react-native';\n\nconst getIconSize = (size: string | number | undefined): number => {\n  if (!size) {\n    return ICON_CONFIG['sm'];\n  }\n\n  if (typeof size === 'number') {\n    return size;\n  }\n\n  return ICON_CONFIG[size];\n};\n\nconst IconView: React.FC<IconViewProps> = (props) => {\n  const { name, color, size, type } = props;\n  if (typeof name === 'string') {\n    return null;\n  }\n\n  const IconElement = name;\n  return <IconElement style={{ fontSize: getIconSize(size), color }} />;\n};\n\ninterface IconViewProps {\n  name: any;\n  size?: string | number;\n  color?: string;\n  type?: string;\n}\n\nIconView.defaultProps = {\n  color: colorTextPrimary,\n  size: 'sm',\n  type: 'Mi',\n};\n\nIconView.propTypes = {\n  name: PropTypes.any.isRequired,\n  color: PropTypes.string.isRequired,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  type: PropTypes.oneOf(['Mi', 'Fa5i', 'Fai', 'Mci']),\n};\n\nexport default IconView;\n","import * as React from 'react';\nimport { Platform, TouchableOpacity } from 'react-native';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport TextView from '@components/TextView';\nimport { styles } from './styles';\nimport BoxView from '@components/BoxView';\nimport ReactModal from 'react-modal';\nimport './styles.css';\n\nimport Rodal from 'rodal';\nimport ButtonItemView from '@components/ButtonItemView';\nimport { Cancel, Refresh } from '@material-ui/icons';\nimport ButtonTagView from '@components/ButtonTagView';\nimport IconView from '@components/IconView';\n\nconst ModalView: React.FC<ModalProps> = (props) => {\n  const { visible, title, close, hide, position = 'bottom', backdropClick, width, height, measure, refresh } = props;\n\n  console.log('@Ankit visible: ', visible);\n\n  const RenderModalAction = () => {\n    let refreshButton = null;\n    if (refresh) {\n      refreshButton = (\n        <BoxView margin=\"xmd\">\n          <ButtonTagView onPress={refresh}>\n            <IconView name={Refresh} size=\"xxxlg\" />\n          </ButtonTagView>\n        </BoxView>\n      );\n    }\n\n    return (\n      <BoxView direction=\"row\">\n        {refreshButton}\n        <ButtonTagView onPress={close}>\n          <IconView name={Cancel} size=\"xxxlg\" />\n        </ButtonTagView>\n      </BoxView>\n    );\n  };\n\n  const RenderChildren = () => {\n    if (!visible) {\n      return null;\n    }\n\n    return (\n      <BoxView padding=\"md\" background=\"white\">\n        <BoxView border=\"bottom\" direction=\"row\" justify=\"spaceBetween\" alignItems=\"center\" padding=\"ysm\">\n          <TextView size=\"xlg\" weight=\"bold\" label={title} />\n          <ButtonTagView onPress={close}>\n            <IconView name={Cancel} size=\"xxxlg\" />\n          </ButtonTagView>\n        </BoxView>\n        <BoxView padding=\"ylg\">{props.children}</BoxView>\n      </BoxView>\n    );\n  };\n\n  return (\n    <Rodal\n      customStyles={{ padding: 0 }}\n      measure={measure}\n      width={width}\n      height={height}\n      animation=\"slideRight\"\n      visible={visible}\n      onClose={close}\n    >\n      {RenderChildren()}\n    </Rodal>\n  );\n};\n\ninterface ModalProps {\n  visible: boolean;\n  title: string;\n  position?: string;\n  close: () => void;\n  hide?: () => void;\n  refresh?: () => void;\n  backdropClick?: boolean;\n  width?: number;\n  height?: number;\n  measure?: string;\n}\n\nModalView.defaultProps = {\n  visible: false,\n  title: '',\n  position: 'bottom',\n  close: undefined,\n  hide: undefined,\n  refresh: undefined,\n  backdropClick: true,\n  width: 400,\n  height: 240,\n  measure: undefined,\n};\n\nModalView.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  position: PropTypes.string,\n  close: PropTypes.func.isRequired || null,\n  hide: PropTypes.func || null,\n  refresh: PropTypes.func || null,\n  backdropClick: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  measure: PropTypes.string,\n};\n\nexport default ModalView;\n","import {\n  colorTransparent,\n  colorWhite,\n  colorDisabled,\n  fontMedium,\n  fontBold,\n  colorTextPrimary,\n  fontRegular,\n} from '@assets/styles';\n\nexport const styles: any = {\n  inputText: {\n    flex: 1,\n    color: colorTextPrimary,\n    paddingLeft: 4,\n    paddingRight: 12,\n    paddingTop: 12,\n    paddingBottom: 12,\n  },\n  inputTextPlaceholder: {},\n  default: {\n    backgroundColor: colorTransparent,\n  },\n  white: {\n    backgroundColor: colorWhite,\n  },\n  grey: {\n    backgroundColor: colorDisabled,\n  },\n  align: {\n    center: {\n      textAlign: 'center',\n    },\n  },\n  size: {\n    xs: {\n      fontSize: 11,\n    },\n    sm: {\n      fontSize: 12,\n    },\n    md: {\n      fontSize: 14,\n    },\n    lg: {\n      fontSize: 18,\n    },\n    xlg: {\n      fontSize: 24,\n    },\n    xxlg: {\n      fontSize: 28,\n    },\n    xxxlg: {\n      fontSize: 96,\n    },\n  },\n};\n","/**\n * @format\n */\n\nimport React from 'react';\nimport { TextInput } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { styles } from './styles';\nimport { colorTransparent, colorAccentDark, colorPlaceholer } from '@assets/styles';\nimport BoxView from '@components/BoxView';\nimport TextView from '@components/TextView';\nimport IconView from '@components/IconView';\n\n/**\n * @description {This InputTextView can be used for taking input from a user. It provides following things mentioned below}\n * Normal Input Text\n * Disabled Input Text\n * Input Text with Left icon\n * Input Text with Right Icon\n * Input Text with Left Text\n */\n\nconst _renderTextInput = (props: IInputTextViewProps) => {\n  const {\n    value,\n    align = '',\n    size = '',\n    placeholder,\n    maxLength,\n    suggestions,\n    editable,\n    focus,\n    inputType,\n    multiline,\n    lines,\n    onChange,\n    onKeyPress\n  } = props;\n\n  return (\n    <TextInput\n      selection={focus === 'left' ? { start: 0, end: 0 } : undefined}\n      editable={editable}\n      multiline={multiline}\n      numberOfLines={lines}\n      maxLength={maxLength}\n      style={[styles.inputText, styles['align'][align], styles['size'][size]]}\n      keyboardType={inputType}\n      returnKeyType=\"done\"\n      value={value}\n      placeholderTextColor={colorPlaceholer}\n      autoCorrect={suggestions}\n      underlineColorAndroid={colorTransparent}\n      placeholder={placeholder}\n      onChangeText={(text) => onChange(text)}\n      onKeyPress={onKeyPress}\n    />\n  );\n};\n\nconst InputTextView: React.FC<IInputTextViewProps> = (props) => {\n  const {\n    size,\n    leftIcon = '',\n    leftText = '',\n    rightIcon = '',\n    rightText = '',\n    background = '',\n    elevation = '',\n    round = '',\n    border = '',\n    iconType = 'Mi'\n  } = props;\n\n  // Case 1   - Having Right or left text\n  if (leftText !== '' || rightText !== '') {\n    const leftTextView =\n      leftText !== '' ? (\n        <BoxView padding=\"xsm\" alignItems=\"center\">\n          <TextView label={leftText} weight=\"bold\" size={size} />\n        </BoxView>\n      ) : null;\n    const rightTextView =\n      rightText !== '' ? (\n        <BoxView padding=\"xsm\" alignItems=\"center\">\n          <TextView label={rightText} size={size} />\n        </BoxView>\n      ) : null;\n    return (\n      <BoxView\n        alignItems=\"center\"\n        border={border}\n        radius={round}\n        padding=\"xsm\"\n        direction=\"row\"\n        background={background}\n        elevation={elevation}\n      >\n        {leftTextView}\n        {_renderTextInput(props)}\n        {rightTextView}\n      </BoxView>\n    );\n  }\n\n  // Case 2   - Having Righr or left icon\n  if (leftIcon !== '' || rightIcon !== '') {\n    const leftIconView =\n      leftIcon !== '' ? (\n        <BoxView padding=\"xxs\" alignItems=\"center\">\n          <IconView type={iconType} name={leftIcon} size={24} color={colorAccentDark} />\n        </BoxView>\n      ) : null;\n    const rightIconView =\n      rightIcon !== '' ? (\n        <BoxView padding=\"xxs\" alignItems=\"center\">\n          <IconView type={iconType} name={rightIcon} size={24} color={colorAccentDark} />\n        </BoxView>\n      ) : null;\n\n    return (\n      <BoxView\n        border={border}\n        radius={round}\n        padding=\"xsm\"\n        direction=\"row\"\n        alignItems=\"center\"\n        background={background}\n        elevation={elevation}\n      >\n        {leftIconView}\n        {_renderTextInput(props)}\n        {rightIconView}\n      </BoxView>\n    );\n  }\n\n  // Case 3   - Regular Input Text\n  return (\n    <BoxView\n      border={border}\n      radius={round}\n      padding=\"xsm\"\n      direction=\"row\"\n      alignItems=\"center\"\n      background={background}\n      elevation={elevation}\n    >\n      {_renderTextInput(props)}\n    </BoxView>\n  );\n};\n\ninterface IInputTextViewProps {\n  value: string;\n  iconType?: string;\n  maxLength?: number;\n  align?: string;\n  size?: string;\n  border?: string;\n  placeholder?: string;\n  suggestions?: boolean;\n  multiline?: boolean;\n  lines?: number;\n  editable?: boolean;\n  inputType?: any;\n  background?: string;\n  leftIcon?: string;\n  leftText?: string;\n  rightIcon?: string;\n  rightText?: string;\n  round?: string;\n  elevation?: string;\n  focus?: string;\n  onChange: (text: any) => void;\n  onKeyPress?: (e: any) => void;\n}\n\nInputTextView.defaultProps = {\n  value: '',\n  iconType: 'Mi',\n  maxLength: 2096,\n  align: '',\n  size: '',\n  border: '',\n  placeholder: '',\n  suggestions: true,\n  multiline: false,\n  lines: 1,\n  background: 'transparent',\n  editable: true,\n  inputType: 'default',\n  leftIcon: undefined,\n  leftText: undefined,\n  rightIcon: undefined,\n  rightText: undefined,\n  round: '',\n  elevation: '',\n  focus: '',\n  onChange: undefined\n};\n\nInputTextView.propTypes = {\n  value: PropTypes.string.isRequired,\n  iconType: PropTypes.string,\n  align: PropTypes.string,\n  size: PropTypes.string,\n  border: PropTypes.string,\n  maxLength: PropTypes.number.isRequired,\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.bool,\n  multiline: PropTypes.bool,\n  lines: PropTypes.number,\n  background: PropTypes.string,\n  editable: PropTypes.bool,\n  inputType: PropTypes.string,\n  leftIcon: PropTypes.string,\n  leftText: PropTypes.string,\n  rightIcon: PropTypes.string,\n  rightText: PropTypes.string,\n  round: PropTypes.string,\n  elevation: PropTypes.string,\n  focus: PropTypes.string,\n  onChange: PropTypes.func.isRequired || null,\n  onKeyPress: PropTypes.func\n};\n\nexport default InputTextView;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BoxView from '@components/BoxView';\nimport ButtonTagView from '@components/ButtonTagView';\nimport TextView from '@components/TextView';\n//import './styles.css';\n\n// active={}\n\nconst PaginationView: React.FC<PaginationViewProps> = (props) => {\n  const { totalRecords, limit, click, page } = props;\n\n  if (totalRecords === null || totalRecords === undefined) {\n    return null;\n  }\n\n  if (limit > totalRecords) {\n    return null;\n  }\n\n  const pagination = totalRecords / limit;\n  const pageNumbers: any = [];\n  for (let i = 1; i <= Math.ceil(pagination); i++) {\n    pageNumbers.push(i);\n  }\n  const renderPageNumbers = pageNumbers.map((number: number) => {\n    const isActive: boolean = pageNumbers[page - 1] === number;\n    return (\n      <ButtonTagView onPress={() => click(number)} key={number}>\n        <BoxView padding=\"md\" margin=\"md\" round=\"lg\" background={isActive ? 'accent' : 'white'}>\n          <TextView color={isActive ? 'white' : 'primary'} weight=\"bold\" size=\"lg\" label={`${number}`} />\n        </BoxView>\n      </ButtonTagView>\n    );\n  });\n  return (\n    <BoxView alignItems=\"center\" flex=\"one\" justify=\"center\" direction=\"row\">\n      {renderPageNumbers}\n    </BoxView>\n  );\n};\n\ninterface PaginationViewProps {\n  totalRecords: number | null | undefined;\n  limit: number;\n  click: (page: number) => void;\n  page: number;\n}\n\nPaginationView.defaultProps = {\n  totalRecords: 0,\n  limit: 10,\n  click: undefined,\n  page: 1,\n};\n\nPaginationView.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  click: PropTypes.func.isRequired || null,\n  page: PropTypes.number.isRequired,\n  limit: PropTypes.number.isRequired,\n};\n\nexport default PaginationView;\n","/**\n * @format\n */\n\nimport React from 'react';\nimport GetMessage from '@i18n';\nimport BoxView from '@components/BoxView';\nimport TextView from '@components/TextView';\nimport ButtonTagView from '@components/ButtonTagView';\nimport IconView from '@components/IconView';\nimport { colorDisabled, colorWhite } from '@assets/styles';\nconst ListEmptyView = (data: ItemListViewProps) => {\n  const { loading, records, onRefresh } = data;\n  const { itemList, hasRecords } = records;\n\n  console.log('@AJ loading :', loading);\n  if (loading) {\n    return null;\n  }\n\n  console.log('@AJ hasRecords, itemList :', loading, itemList);\n  if (hasRecords === null || itemList === null) {\n    return null;\n  }\n\n  console.log('@AJJ hasRecords, itemList00 :', !loading, itemList.length);\n  console.log('@AJJ hasRecords, itemList :', !loading && itemList.length === 0);\n  if (!loading && itemList.length === 0) {\n    return (\n      <BoxView padding=\"md\" alignItems=\"center\" justify=\"center\" alignSelf=\"center\">\n        <IconView type=\"Fa5i\" name=\"cloud\" size=\"xxxxxlg\" color={colorDisabled} />\n        <BoxView alignItems=\"center\" margin=\"ymd\">\n          <TextView size=\"lg\" label={GetMessage('IO_NO_RECORDS')} />\n        </BoxView>\n      </BoxView>\n    );\n  }\n\n  if (!loading && itemList.length === 0 && !!onRefresh) {\n    return (\n      <BoxView padding=\"md\" alignItems=\"center\" justify=\"center\" alignSelf=\"center\">\n        <IconView type=\"Fa5i\" name=\"cloud\" size=\"xxxxxlg\" color={colorDisabled} />\n        <BoxView alignItems=\"center\" margin=\"ymd\">\n          <TextView size=\"lg\" label={GetMessage('IO_NO_RECORDS')} />\n          <BoxView margin=\"ysm\">\n            <ButtonTagView onPress={onRefresh}>\n              <BoxView\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"spaceBetween\"\n                background=\"accent\"\n                padding=\"sm\"\n                radius=\"sm\"\n              >\n                <TextView label=\"Refresh\" size=\"lg\" color=\"white\" />\n                <BoxView padding=\"xsm\">\n                  <IconView name=\"refresh\" color={colorWhite} size=\"md\" />\n                </BoxView>\n              </BoxView>\n            </ButtonTagView>\n          </BoxView>\n        </BoxView>\n      </BoxView>\n    );\n  }\n\n  return null;\n};\n\ninterface IRecords {\n  totalRecords: number | null | undefined;\n  itemList: any | null;\n  hasRecords: boolean | null;\n}\n\ninterface ItemListViewProps {\n  limit?: number;\n  page?: number;\n  records: IRecords;\n  loading: boolean;\n  onRefresh?(): any;\n  onLoadMore?(): any;\n}\n\nexport default ListEmptyView;\n","/**\n * @format\n */\n\nimport React from 'react';\nimport { FlatList } from 'react-native';\nimport PropTypes from 'prop-types';\nimport BoxView from '@components/BoxView';\nimport PaginationView from '@components/PaginationView';\nimport ListEmptyView from './views/EmptyView';\n\nconst ItemListView: React.FC<ItemListViewProps> = (props) => {\n  const {\n    limit,\n    page,\n    records,\n    component,\n    click_1,\n    click_2,\n    click_3,\n    click_4,\n    click_5,\n    cols = 1,\n    loading,\n    onRefresh,\n    onLoadMore,\n    onPageChange\n  } = props;\n  const { itemList } = records;\n  const ContentComponent = component;\n\n  const OnPageChangeEvent = (page: number) => {\n    if (!onPageChange) {\n      return;\n    }\n    onPageChange(page);\n  };\n\n  const RenderPagination = () => {\n    if (!limit || !page) {\n      return;\n    }\n    return <PaginationView limit={limit} page={page} totalRecords={records.totalRecords} click={OnPageChangeEvent} />;\n  };\n\n  console.log('@AJ props', props);\n\n  return (\n    <BoxView>\n      <FlatList\n        ListEmptyComponent={<ListEmptyView records={records} loading={!!loading} />}\n        numColumns={cols}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        data={itemList}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item, index }) => {\n          return (\n            <ContentComponent\n              click_1={click_1}\n              click_2={click_2}\n              click_3={click_3}\n              click_4={click_4}\n              click_5={click_5}\n              item={item}\n              index={index}\n            />\n          );\n        }}\n        refreshing={loading}\n        onRefresh={onRefresh}\n        onEndReached={onLoadMore}\n        onEndReachedThreshold={0.1}\n      />\n      {RenderPagination()}\n    </BoxView>\n  );\n};\n\ninterface IRecords {\n  totalRecords: number | null | undefined;\n  itemList: any | null;\n  hasRecords: boolean | null;\n}\n\ninterface ItemListViewProps {\n  limit?: number;\n  page?: number;\n  records: IRecords;\n  loading: boolean;\n  component: any;\n  cols?: number;\n  header?: boolean;\n  padding?: number;\n  retryClick?: () => void;\n  onRefresh?(): any;\n  onLoadMore?(): any;\n  onPageChange?(page: number): any;\n  click_1?: (params: any) => void;\n  click_2?: (params: any) => void;\n  click_3?: (params: any) => void;\n  click_4?: (params: any) => void;\n  click_5?: (params: any) => void;\n}\n\nItemListView.defaultProps = {\n  records: {\n    totalRecords: null,\n    itemList: null,\n    hasRecords: null\n  },\n  loading: false,\n  cols: 1,\n  header: false,\n  padding: 100,\n  retryClick: undefined,\n  onRefresh: undefined,\n  onLoadMore: undefined,\n  onPageChange: undefined,\n  click_1: undefined,\n  click_2: undefined,\n  click_3: undefined,\n  click_4: undefined,\n  click_5: undefined\n};\n\nItemListView.propTypes = {\n  page: PropTypes.number,\n  limit: PropTypes.number,\n  records: PropTypes.any,\n  loading: PropTypes.bool.isRequired,\n  header: PropTypes.bool,\n  retryClick: PropTypes.func || null,\n  onLoadMore: PropTypes.func || null,\n  onRefresh: PropTypes.func || null,\n  onPageChange: PropTypes.func || null,\n  cols: PropTypes.number,\n  padding: PropTypes.number,\n  click_1: PropTypes.func || undefined,\n  click_2: PropTypes.func || null,\n  click_3: PropTypes.func || null,\n  click_4: PropTypes.func || null,\n  click_5: PropTypes.func || null\n};\n\nexport default ItemListView;\n","/**\n * @format\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BoxView from '@components/BoxView';\nimport TextView from '@components/TextView';\nimport ButtonTagView from '@components/ButtonTagView';\nimport { Dimensions } from 'react-native';\n\nvar width = Dimensions.get('window').width;\n\nconst BookItem: React.FC<ITransactionItem> = (props) => {\n  const { item, click_1 } = props;\n  const { title, sysId, description, year } = item;\n  return (\n    <BoxView flex=\"two\" border=\"md\" margin=\"sm\">\n      <ButtonTagView onPress={() => click_1(item)}>\n        <BoxView width={`${width * 5}`} padding=\"md\" direction=\"row\" background=\"white\">\n          <BoxView round=\"xxlg\">\n            <img width=\"90\" height=\"90\" src=\"https://images-na.ssl-images-amazon.com/images/I/81nFI-hPu5L.jpg\" />\n          </BoxView>\n          <BoxView margin=\"xmd\" flex=\"one\">\n            <BoxView>\n              <TextView weight=\"bold\" size=\"lg\" label={`${title}`} />\n            </BoxView>\n            <BoxView>\n              <TextView lines={2} label={`${description}`} />\n            </BoxView>\n            <BoxView>\n              <TextView label={`${year}`} />\n            </BoxView>\n          </BoxView>\n        </BoxView>\n      </ButtonTagView>\n    </BoxView>\n  );\n};\n\ninterface IItem {\n  sysId: string;\n  title: string;\n  description: string;\n  year: number;\n}\n\ninterface ITransactionItem {\n  item: IItem;\n  click_1(data: any): any;\n}\n\nBookItem.defaultProps = {\n  item: {\n    sysId: '',\n    title: '',\n    description: '',\n    year: 0\n  },\n  click_1: undefined\n};\n\nBookItem.propTypes = {\n  item: PropTypes.shape({\n    sysId: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired\n  }).isRequired,\n  click_1: PropTypes.func.isRequired\n};\n\nexport default BookItem;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const GetUniqueId = (): string => {\n  return uuidv4();\n};\n\nexport const IsObjEmpty = (payload: object): boolean => {\n  return Object.keys(payload).length === 0 ? true : false;\n};\n\nexport const GetRandomString = (size: number): string => {\n  let result = '';\n  var characters: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_';\n  var charactersLength = characters.length;\n  for (let i = 0; i < size; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n","/**\n * @format\n */\n\nimport React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport PropTypes from 'prop-types';\nimport BoxView from '@components/BoxView';\nimport TextView from '@components/TextView';\nimport IconView from '@components/IconView';\nimport { WhatsApp, ArrowForward } from '@material-ui/icons';\n\nconst getButtonView = (\n  label: string,\n  iconType: string,\n  background: string,\n  color: string,\n  icon: any,\n  size: string,\n  iconColor: string\n) => {\n  const IconElement = icon;\n  if (icon !== '') {\n    return (\n      <BoxView\n        padding=\"md\"\n        justify=\"spaceBetween\"\n        direction=\"row\"\n        alignItems=\"center\"\n        background={background}\n        radius=\"sm\"\n      >\n        <TextView size={size} weight=\"bold\" color={color} label={label} />\n        <IconElement style={{ color: iconColor }} />\n      </BoxView>\n    );\n  }\n\n  return (\n    <BoxView padding=\"md\" background={background} radius=\"sm\">\n      <TextView size=\"lg\" weight=\"bold\" color={color} align=\"center\" label={label} />\n    </BoxView>\n  );\n};\n\nconst ButtonItemView: React.FC<ButtonItemProps> = (props) => {\n  const {\n    onPress,\n    label,\n    background = 'darkAccent',\n    color = 'white',\n    icon = '',\n    size = 'md',\n    iconType = 'Mi',\n    iconColor = 'white',\n  } = props;\n  const buttonView = getButtonView(label, iconType, background, color, icon, size, iconColor);\n\n  return (\n    <TouchableOpacity activeOpacity={0.7} onPress={onPress}>\n      {buttonView}\n    </TouchableOpacity>\n  );\n};\n\ninterface ButtonItemProps {\n  onPress(): any;\n  label: string;\n  background?: string;\n  color?: string;\n  icon?: any;\n  size?: string;\n  iconType?: string;\n  iconColor?: string;\n}\n\nButtonItemView.defaultProps = {\n  onPress: undefined,\n  label: '',\n  background: 'darkAccent',\n  color: 'white',\n  size: 'md',\n  iconType: 'Mi',\n  iconColor: 'white',\n};\n\nButtonItemView.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  background: PropTypes.string,\n  color: PropTypes.string,\n  icon: PropTypes.any,\n  iconType: PropTypes.string,\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xlg', 'xxlg']).isRequired,\n  iconColor: PropTypes.string,\n};\n\nexport default ButtonItemView;\n","import React, { Component } from 'react';\nimport BoxView from '@components/BoxView';\nimport TextView from '@components/TextView';\nimport ButtonTagView from '@components/ButtonTagView';\nimport ButtonItemView from '@components/ButtonItemView';\nimport IconView from '@components/IconView';\nimport { Star, LocalOffer, EventAvailable, ShoppingCart, FlashOn } from '@material-ui/icons';\nimport { colorSuccess } from '@assets/styles';\nimport { Dimensions } from 'react-native';\nvar width = Dimensions.get('window').width;\n\nexport default class BookDetailsView extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      screenWidth: Math.round(width)\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ screenWidth: Math.round(window.innerWidth) });\n  };\n\n  render() {\n    const { data } = this.props;\n    console.log('Data:: ', data);\n    const { screenWidth } = this.state;\n    const showDirectionOnSmallDevice = screenWidth < 945 ? 'column' : 'row';\n    const showDirectionOnExtraSmallDevice = screenWidth < 756 ? 'ysm' : 'lg';\n    return (\n      <BoxView background=\"white\" flex=\"one\" padding=\"pb60\">\n        <BoxView margin={showDirectionOnExtraSmallDevice} direction={showDirectionOnSmallDevice}>\n          <BoxView flex=\"four\">\n            <BoxView justify=\"center\" alignItems=\"center\">\n              <BoxView round=\"xxxxlg\">\n                <img width=\"260\" height=\"260\" src=\"https://images-na.ssl-images-amazon.com/images/I/81nFI-hPu5L.jpg\" />\n              </BoxView>\n            </BoxView>\n            <BoxView margin=\"ymd\" flex=\"one\" border=\"top\" padding=\"sm\">\n              <BoxView direction=\"row\">\n                <BoxView flex=\"five\">\n                  <ButtonItemView background=\"warning\" icon={ShoppingCart} label=\"ADD TO CART\" onPress={() => {}} />\n                </BoxView>\n                <BoxView flex=\"five\" margin=\"xl6\">\n                  <ButtonItemView background=\"danger\" icon={FlashOn} label=\"BUY NOW\" onPress={() => {}} />\n                </BoxView>\n              </BoxView>\n            </BoxView>\n          </BoxView>\n\n          <BoxView margin=\"xmd\" padding=\"md\" flex=\"seven\" border=\"sm\">\n            <BoxView>\n              <TextView color=\"secondary\" size=\"xs\" label={`Home > Books > Other Books > ${data?.title}`} />\n            </BoxView>\n            <BoxView>\n              <TextView size=\"xlg\" label={`${data?.title}`} />\n            </BoxView>\n\n            <BoxView direction=\"row\" alignItems=\"center\">\n              <ButtonTagView onPress={() => {}}>\n                <BoxView\n                  background=\"success\"\n                  padding=\"xmd\"\n                  radius=\"sm\"\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justify=\"center\"\n                >\n                  <TextView color=\"white\" label=\"4.3\" />\n                  <IconView name={Star} color=\"white\" />\n                </BoxView>\n              </ButtonTagView>\n              <BoxView margin=\"xl6\">\n                <TextView color=\"secondary\" weight=\"bold\" label=\"79 Ratings &amp; 13 Reviews\" />\n              </BoxView>\n            </BoxView>\n\n            <BoxView>\n              <BoxView>\n                <TextView weight=\"bold\" size=\"xlg\" label=\"₹ 150\" />\n              </BoxView>\n              <BoxView>\n                <TextView color=\"danger\" size=\"md\" label=\"Only 4 left in stock\" />\n              </BoxView>\n            </BoxView>\n            <BoxView>\n              <BoxView>\n                <TextView weight=\"bold\" size=\"lg\" label=\"Available offers\" />\n              </BoxView>\n              <BoxView>\n                <BoxView direction=\"row\" alignItems=\"center\">\n                  <IconView name={LocalOffer} color={colorSuccess} />\n                  <BoxView margin=\"xsm\">\n                    <TextView size=\"md\" weight=\"bold\" label=\"Bank Offer\" />\n                  </BoxView>\n                  <TextView size=\"md\" label=\"5% Unlimited Cashback on AMEX Bank Credit Card\" />\n                  <BoxView margin=\"xsm\">\n                    <a className=\"link bold\" href=\"\">\n                      T&amp;C\n                    </a>\n                  </BoxView>\n                </BoxView>\n\n                <BoxView direction=\"row\" alignItems=\"center\">\n                  <IconView name={EventAvailable} color={colorSuccess} />\n                  <BoxView margin=\"xsm\">\n                    <TextView size=\"md\" label=\"No Cost EMI on AXEX Bank Credit Card\" />\n                  </BoxView>\n                  <BoxView margin=\"xsm\">\n                    <a className=\"link bold\" href=\"\">\n                      T&amp;C\n                    </a>\n                  </BoxView>\n                </BoxView>\n              </BoxView>\n            </BoxView>\n\n            <BoxView border=\"top\" margin=\"smTop\" padding=\"ysm\">\n              <BoxView direction=\"row\">\n                <TextView weight=\"bold\" label=\"Author : \" />\n                <BoxView margin=\"xsm\">\n                  <TextView label={`${data?.author}`} />\n                </BoxView>\n              </BoxView>\n              <BoxView direction=\"row\">\n                <TextView weight=\"bold\" label=\"Year : \" />\n                <BoxView margin=\"xsm\">\n                  <TextView label={`${data?.year}`} />\n                </BoxView>\n              </BoxView>\n            </BoxView>\n\n            <BoxView padding=\"ymd\" border=\"top\">\n              <BoxView>\n                <TextView lines={10} label={`${data?.description}`} />\n              </BoxView>\n            </BoxView>\n          </BoxView>\n        </BoxView>\n      </BoxView>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import SmsRetriever from 'react-native-sms-retriever';\nimport BoxView from '@components/BoxView';\nimport { IProps, IPropsToState, IState } from './types';\nimport GetMessage from '@i18n';\nimport ModalView from '@components/ModalView';\nimport TextView from '@components/TextView';\nimport ButtonTagView from '@components/ButtonTagView';\nimport { ActivityIndicator, Dimensions } from 'react-native';\nimport InputTextView from '@components/InputTextView';\nimport ItemListView from '@components/ItemListView';\nimport BookItem from './views/BookItem';\nimport { GetRandomString } from '@utils';\nimport { IBookItem, IGetBookListRequest } from './List/types';\nimport { debounce, isEqual } from 'lodash';\nimport BookDetailsView from './Details/component';\nvar width = Dimensions.get('window').width;\n\nexport default class BookView extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      screenWidth: Math.round(width / 420),\n      search: '',\n      page: 1,\n      limit: 12,\n      books: {\n        hasRecords: null,\n        totalRecords: null,\n        itemList: null\n      },\n      isFetching: false,\n      visibleBookDetailsModal: false,\n      selectedBook: null\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this._dispatchGetBookList();\n  }\n\n  _dispatchGetBookList = () => {\n    const { limit, page, search } = this.state;\n    const params: IGetBookListRequest = {\n      page,\n      limit,\n      search\n    };\n    this.props.onGetBookListRequest(params);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ screenWidth: Math.round(window.innerWidth / 420) });\n  };\n\n  _handleSetInput = (search: string) => {\n    this.setState(\n      {\n        search,\n        page: 1,\n        limit: 12\n      },\n      () => {\n        this.debounceSearchInputChange();\n      }\n    );\n  };\n\n  debounceSearchInputChange = debounce(() => {\n    console.log('Called');\n    this._dispatchGetBookList();\n  }, 400);\n\n  static getDerivedStateFromProps(props: IProps, state: IState) {\n    const { isFetching, bookListResponse } = props;\n    console.log('Response: ', { isFetching }, { bookListResponse });\n\n    let payload: IPropsToState = {};\n\n    if (isFetching !== state.isFetching) {\n      payload['isFetching'] = !!isFetching;\n    }\n\n    if (!!bookListResponse && !isEqual(bookListResponse?.response, state.books)) {\n      const { totalRecords } = bookListResponse;\n\n      const tasks = {\n        totalRecords: totalRecords || 0,\n        hasRecords: !!bookListResponse.response || false,\n        itemList: bookListResponse.response || []\n      };\n      payload['books'] = tasks;\n    }\n\n    return payload;\n  }\n\n  _handlePageChange = (page: number) => {\n    this.setState(\n      {\n        page\n      },\n      () => {\n        this._dispatchGetBookList();\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }\n    );\n  };\n\n  _renderModal = () => {\n    const { visibleBookDetailsModal, selectedBook } = this.state;\n    return (\n      <ModalView\n        measure=\"10\"\n        visible={visibleBookDetailsModal}\n        title={GetMessage('Book Details')}\n        close={() => this.setState({ visibleBookDetailsModal: false })}\n      >\n        <BookDetailsView data={selectedBook} />\n      </ModalView>\n    );\n  };\n\n  _handleOpenBookDetails = (selectedBook: IBookItem) => {\n    this.setState({\n      selectedBook,\n      visibleBookDetailsModal: true\n    });\n  };\n\n  render() {\n    const { screenWidth, search, books, page, limit, isFetching } = this.state;\n    return (\n      <BoxView>\n        {this._renderModal()}\n        <BoxView background=\"white\" padding=\"md\" elevation=\"md\">\n          <TextView label=\"My Book Store\" weight=\"bold\" size=\"lg\" />\n        </BoxView>\n        <BoxView margin={screenWidth === 1 ? 'sm' : 'xlg'}>\n          <BoxView\n            flex=\"one\"\n            direction=\"row\"\n            margin=\"ymd\"\n            alignItems=\"center\"\n            background=\"white\"\n            radius=\"sm\"\n            border=\"sm\"\n          >\n            <BoxView flex=\"eight\">\n              <InputTextView\n                round=\"sm\"\n                editable={true}\n                background=\"transparent\"\n                border=\"none\"\n                placeholder={GetMessage('IO_SEARCH_BOOK')}\n                size=\"lg\"\n                value={search}\n                onChange={(search) => {\n                  this._handleSetInput(search);\n                }}\n              />\n            </BoxView>\n            <BoxView margin=\"xl6\" padding=\"xmd\">\n              <ActivityIndicator size=\"large\" animating={isFetching} />\n            </BoxView>\n          </BoxView>\n          <BoxView flex=\"one\" direction=\"row\" justify=\"spaceBetween\" border=\"bottom\">\n            <BoxView direction=\"row\" padding=\"ymd\">\n              <BoxView>\n                <ButtonTagView onPress={() => {}}>\n                  <BoxView direction=\"row\">\n                    <BoxView padding=\"xmd\" background={'accent'} radius=\"md\">\n                      <TextView color=\"white\" label={`Searching for  ${search}`} />\n                    </BoxView>\n                    <BoxView margin=\"xmd\"></BoxView>\n                  </BoxView>\n                </ButtonTagView>\n              </BoxView>\n            </BoxView>\n\n            <BoxView direction=\"row\" padding=\"ymd\">\n              <BoxView padding=\"xsm\">\n                <TextView label={`Total Books : ${books?.totalRecords || 0}`} />\n              </BoxView>\n              <BoxView margin=\"xmd\">\n                <ActivityIndicator animating={!!false} />\n              </BoxView>\n            </BoxView>\n          </BoxView>\n\n          <BoxView margin=\"ymd\">\n            <ItemListView\n              key={screenWidth === 1 ? GetRandomString(5) : GetRandomString(5)}\n              click_1={this._handleOpenBookDetails}\n              page={page}\n              limit={limit}\n              cols={screenWidth}\n              loading={isFetching}\n              component={BookItem}\n              records={books}\n              onPageChange={this._handlePageChange}\n            />\n          </BoxView>\n        </BoxView>\n      </BoxView>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport Component from './component';\nimport { Dispatch } from 'redux';\nimport { IReducerState } from '@redux/reducers/types';\nimport { IGetBookListRequest } from './List/types';\nimport { getBooksAction } from './List/action';\n\nconst mapStateToProps = (state: IReducerState) => {\n  return {\n    bookListResponse: state.bookList.items,\n    isFetching: state.bookList.isFetching\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    onGetBookListRequest: (params: IGetBookListRequest) => {\n      dispatch(getBooksAction(params));\n    }\n  };\n};\n\nconst BooksScreen = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport default BooksScreen;\n","import { IGetBookListRequest, IGetBookListResponse } from './types';\n\nexport const GET_BOOKS = 'GET_BOOKS';\nexport const GET_BOOKS_SUCCEEDED = 'GET_BOOKS_SUCCEEDED';\nexport const GET_BOOKS_FAILED = 'GET_BOOKS_FAILED';\n\nexport const getBooksAction = (params: IGetBookListRequest) => {\n  return { type: GET_BOOKS, params };\n};\n\nexport const getBooksSuccessAction = (results: IGetBookListResponse) => {\n  return { type: GET_BOOKS_SUCCEEDED, results };\n};\n\nexport const getBooksFailedAction = () => {\n  return { type: GET_BOOKS_FAILED };\n};\n","import * as React from 'react';\nimport { StatusBar } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { setNavigator } from './navigator';\nimport WelcomeScreen from '@features/Welcome';\nimport BoxView from '@components/BoxView';\nimport { ToastContainer } from 'react-toastify';\n\nimport BooksScreen from '@features/Books';\nimport BooksDetailsScreen from '@features/Books/Details/component';\n\nconst Stack = createStackNavigator();\n\nfunction RootNavigation() {\n  const ref = React.useRef(null);\n  setNavigator(ref);\n  return (\n    <BoxView flex=\"one\">\n      <NavigationContainer ref={ref}>\n        <StatusBar backgroundColor=\"white\" barStyle=\"dark-content\" />\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Welcome\"\n            component={WelcomeScreen}\n            options={{\n              title: 'Book Shelf',\n              headerShown: false\n            }}\n          />\n          <Stack.Screen\n            name=\"BooksScreen\"\n            component={BooksScreen}\n            options={{\n              title: 'Books',\n              headerShown: false\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </BoxView>\n  );\n}\n\nexport default RootNavigation;\n","import { GET_BOOKS, GET_BOOKS_FAILED, GET_BOOKS_SUCCEEDED } from './action';\nimport { IGetBookListStateReducer, IGetBookRequestAction } from './types';\n\nconst intialState: IGetBookListStateReducer = {\n  isFetching: false,\n  items: {\n    totalRecords: null,\n    response: null\n  }\n};\n\nconst GetBookListReducer = (\n  state: IGetBookListStateReducer = intialState,\n  action: IGetBookRequestAction\n): IGetBookListStateReducer => {\n  switch (action.type) {\n    case GET_BOOKS:\n      return {\n        isFetching: true\n      };\n    case GET_BOOKS_SUCCEEDED:\n      return {\n        isFetching: false,\n        items: action.results\n      };\n    case GET_BOOKS_FAILED:\n      return {\n        isFetching: false,\n        items: {\n          totalRecords: 0,\n          response: []\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default GetBookListReducer;\n","import { combineReducers } from 'redux';\n\n// Books\nimport bookList from '@features/Books/List/reducer';\n\nconst AppReducer = combineReducers({\n  bookList\n});\n\nexport default AppReducer;\n","const GetBaseApplicationURL = (): string => {\n  const __STAGING__: boolean = false;\n  const __PROD__: boolean = true;\n\n  const devApplicationURL: string = 'http://192.168.0.108:7000/'; // Replace with your local machine URL running application server\n  const stageApplicationURL: string = 'http://api-staging.inofficepay.com:7000/';\n  const prodApplicationURL: string = 'https://13.127.148.23:7000/';\n\n  if (__PROD__) {\n    return prodApplicationURL;\n  }\n\n  if (__STAGING__) {\n    return stageApplicationURL;\n  }\n\n  return devApplicationURL;\n};\n\n// * HTTP Status codes\nexport const SUCCESS_STATUS = 200;\nexport const SUCCESS_WITH_CREATED_STATUS = 201;\nexport const UNAUTHORIZED = 401;\nexport const BAD_REQUEST = 400;\nexport const SERVER_ERROR = 500;\n\n// * NETWORK API's\nexport const BASE_URL: string = GetBaseApplicationURL();\n\n// Books API\nexport const BOOK_LIST_API: string = 'book/list';\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { BASE_URL, SUCCESS_STATUS } from '@network/config';\nimport { getCurrentLocale } from '@i18n';\n\nfunction* GetRequest(url: string, authentication: boolean = true) {\n  const config: AxiosRequestConfig = authentication\n    ? yield GetHeadersWithAuthentication()\n    : yield GetHeadersWithOutAuthentication();\n\n  const results: AxiosResponse = yield axios.get(`${BASE_URL}${url}`, config);\n  const { status, data } = results;\n  return status === SUCCESS_STATUS ? data : {};\n}\n\nconst GetHeadersWithAuthentication = () => {\n  const config: AxiosRequestConfig = {\n    headers: {\n      Accept: 'application/json'\n    }\n  };\n  return config;\n};\n\nfunction* GetHeadersWithOutAuthentication() {\n  const config: AxiosRequestConfig = {\n    headers: {\n      'Content-Type': 'application/json',\n      HTTP_CONTENT_LANGUAGE: getCurrentLocale()\n    }\n  };\n  return config;\n}\n\nexport { GetRequest as GET };\n","/**\n * @format\n */\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ToastView = (message: string, duration: string = 'short') => {\n  toast['dark'](message);\n};\n\nexport const ShowToast = (\n  message: string,\n  type?: 'info' | 'warn' | 'success' | 'error' | 'dark' | '',\n  duration?: number\n) => {\n  if (!type) {\n    toast(message);\n    return;\n  }\n  toast[type](message);\n};\n\nexport const ShowTopToast = (message: string) => {\n  //Toast.showWithGravity(message, Toast.LONG, Toast.TOP);\n};\n\nexport const ShowCenterToast = (message: string) => {\n  //Toast.showWithGravity(message, Toast.SHORT, Toast.CENTER);\n};\n\nexport default ToastView;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { GET } from '@network/index';\nimport { IHTTPResponse } from '@network/types';\nimport { BOOK_LIST_API, SERVER_ERROR } from '@network/config';\nimport { GET_BOOKS, getBooksFailedAction, getBooksSuccessAction } from './action';\nimport Toast from '@components/ToastView';\nimport { IGetBookRequestAction } from './types';\nimport { IsObjEmpty } from '@utils';\n\nfunction* getBookList(actions: IGetBookRequestAction) {\n  console.log('Inside getBookList');\n  try {\n    const { page, limit, search } = actions['params'];\n    const URL: string = `${BOOK_LIST_API}?search=${search}&page=${page}&limit=${limit}`;\n\n    const response: IHTTPResponse = yield GET(URL, false);\n    const { data, meta } = response;\n    if (IsObjEmpty(data)) {\n      console.log('Inside getBookList Failed');\n      yield put(getBooksFailedAction());\n      Toast(meta['message']);\n      return;\n    }\n    console.log('Inside getBookList Success');\n    yield put(getBooksSuccessAction(data['results']));\n    return;\n  } catch (error) {\n    console.log('Inside getBookList Catch', error);\n    yield put(getBooksFailedAction());\n    if (!error['response']) {\n      Toast('There is an issue while registering business.');\n      return;\n    }\n    if (error.response.status === SERVER_ERROR) {\n      Toast('There is an issue with your request.');\n      return;\n    }\n  }\n}\n\nexport function* watchGetBookListRequest() {\n  yield takeLatest(GET_BOOKS, getBookList);\n}\n","//Saga effects\nimport { all, fork } from 'redux-saga/effects';\n\n// Books\nimport { watchGetBookListRequest } from '@features/Books/List/saga';\n\nexport default function* rootSaga() {\n  yield all([fork(watchGetBookListRequest)]);\n}\n","import AppReducer from '../reducers';\nimport {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(AppReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\nexport default store;\n","/**\n * @format\n */\nimport React from 'react';\nimport { AppRegistry, View } from 'react-native';\nimport 'react-native-get-random-values';\nimport { name as appName } from './app.json';\nimport { Provider } from 'react-redux';\nimport RootNavigation from '@navigation/index';\nimport AppStore from '@redux/store';\n\nconst App = () => (\n  <View style={{ flex: 1, backgroundColor: '#325795' }}>\n    <Provider store={AppStore}>\n      <RootNavigation />\n    </Provider>\n  </View>\n);\n\nAppRegistry.registerComponent(appName, () => App);\nAppRegistry.runApplication(appName, {\n  // Mount the react-native app in the \"root\" div of index.html\n  rootTag: document.getElementById('root')\n});\n"],"sourceRoot":""}